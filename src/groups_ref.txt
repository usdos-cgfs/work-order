<iframe id="CsvExpFrame" style="display: none"></iframe>
<div>
  <button type="button" data-bind="click: clickViewExportModal">
    View for Export
  </button>
  <table id="tblSiteGroups">
    <thead>
      <tr>
        <th>Title</th>
        <th>Users</th>
        <th>Permissions</th>
      </tr>
    </thead>
    <tbody data-bind="foreach: siteGroupsAssignments">
      <tr>
        <td data-bind="text: Member.Title"></td>
        <td>
          <ul data-bind="foreach: Member.Users.results">
            <li data-bind="text: $root.formatUsersItem($data)"></li>
          </ul>
        </td>
        <td>
          <ul data-bind="foreach: RoleDefinitionBindings.results">
            <li data-bind="text: Name"></li>
          </ul>
        </td>
      </tr>
    </tbody>
  </table>
</div>
<dialog id="dlgExportView">
  <div>
    <div>
      <button type="button" data-bind="click: clickExportSiteGroups">
        Export
      </button>
      <button type="button" data-bind="click: clickCloseExportModal">
        Close
      </button>
    </div>
    <table id="tblSiteGroupsExport" class="table-export">
      <thead>
        <tr>
          <th>Title</th>
          <th>Users</th>
          <th>Permissions</th>
        </tr>
      </thead>
      <tbody data-bind="foreach: siteGroupsAssignments">
        <tr>
          <td data-bind="text: Member.Title"></td>
          <td data-bind="text: $root.formatUsersCellExport($data)"></td>
          <td data-bind="text: $root.formatPermissionsCellExport($data)"></td>
        </tr>
      </tbody>
    </table>
  </div>
</dialog>
<!-- <script src="/sites/CGFS/Style Library/apps/wo/lib/knockout/knockout-3.5.1.js"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.0/knockout-min.js"></script>

<script defer type="module">
  const roleAssignmentsRequest =
    "_api/web/RoleAssignments?$expand=RoleDefinitionBindings,Member/Users";

  class GroupReport {
    siteRoleAssignments = ko.observableArray();

    siteGroupsAssignments = ko.pureComputed(() => {
      return this.siteRoleAssignments().filter((roleAssignment) => {
        return roleAssignment.Member.PrincipalType == 8;
      });
    });

    formatUsersItem(user) {
      return `${user.LoginName} (${user.Title})`;
    }

    formatUsersCellExport(groupAssignment) {
      return groupAssignment.Member.Users.results
        .map((user) => user.LoginName)
        .join("; ");
    }

    formatPermissionsCellExport(groupAssignment) {
      return groupAssignment.RoleDefinitionBindings.results
        .map((role) => role.Name)
        .join("; ");
    }

    async fetchRoleAssignments() {
      const results = await fetchData(roleAssignmentsRequest);
      console.log(results.results);
      this.siteRoleAssignments(results.results);
    }

    clickViewExportModal() {
      document.getElementById("dlgExportView").showModal();
    }

    clickCloseExportModal() {
      document.getElementById("dlgExportView").close();
    }

    clickExportSiteGroups() {
      const fileName =
        _spPageContextInfo.webTitle +
        "-SiteGroups_" +
        new Date().format("yyyy-MM-dd");
      exportToCsv(fileName, "tblSiteGroupsExport", false);
    }

    static async Create() {
      const newReport = new GroupReport();
      await newReport.fetchRoleAssignments();
      return newReport;
    }
  }

  async function createReport() {
    const newReport = await GroupReport.Create();
    ko.applyBindings(newReport);
  }

  createReport();

  async function fetchData(uri, method = "GET") {
    const siteEndpoint = uri.startsWith("http")
      ? uri
      : _spPageContextInfo.webAbsoluteUrl + "/" + uri;
    const response = await fetch(siteEndpoint, {
      method: method,
      headers: {
        Accept: "application/json; odata=verbose",
        "X-RequestDigest": document.getElementById("__REQUESTDIGEST").value,
      },
    });

    if (!response.ok) {
      if (response.status == 404) {
        return;
      }
      console.error(response);
    }
    const result = await response.json();
    return result.d;
  }

  //make sure iframe with id csvexprframe is added to page up top
  //http://stackoverflow.com/questions/18185660/javascript-jquery-exporting-data-in-csv-not-working-in-ie
  function exportToCsv(fileName, tableName, removeHeader) {
    var data = getCellValues(tableName);

    if (!data) {
      alert("No data!");
      return;
    }

    if (removeHeader == true) data = data.slice(1);

    var csv = convertToCsv(data);
    //	console.log( csv );

    var uri = "data:text/csv;charset=utf-8," + encodeURIComponent(csv);
    var downloadLink = document.createElement("a");
    downloadLink.href = uri;
    downloadLink.download = fileName + ".csv";
    document.body.appendChild(downloadLink);
    downloadLink.click();
    document.body.removeChild(downloadLink);
  }

  function getCellValues(tableName) {
    var table = document.getElementById(tableName);

    if (!table) return;

    var tableArray = [];
    for (var r = 0, n = table.rows.length; r < n; r++) {
      tableArray[r] = [];
      for (var c = 0, m = table.rows[r].cells.length; c < m; c++) {
        var text =
          table.rows[r].cells[c].textContent ||
          table.rows[r].cells[c].innerText;
        tableArray[r][c] = text.trim();
      }
    }
    return tableArray;
  }

  function convertToCsv(objArray) {
    var array = typeof objArray != "object" ? JSON.parse(objArray) : objArray;
    var str = "sep=,\r\n";
    var line = "";
    var index;
    var value;
    for (var i = 0; i < array.length; i++) {
      line = "";
      var array1 = array[i];
      for (index in array1) {
        if (array1.hasOwnProperty(index)) {
          value = array1[index] + "";
          line += '"' + value.replace(/"/g, '""') + '",';
        }
      }
      line = line.slice(0, -1);
      str += line + "\r\n";
    }
    return str;
  }
</script>
