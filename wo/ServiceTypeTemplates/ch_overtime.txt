<script>
  /************************************************************
   *    List Def:
   ************************************************************/
  vm.listDefs.push({
    uid: "ch_overtime",
    name: "st_ch_overtime",
    title: "st_ch_overtime",
    viewFields: {
      ID: { type: "Text", koMap: "empty", required: false },
      Title: { type: "Text", koMap: "requestID", required: false },
      FullName: { type: "Person", koMap: "overtimeFullName", required: true },
      ManagerDept: {
        type: "Person",
        koMap: "overtimeManagerDept",
        required: true,
      },
      ManagerTask: {
        type: "Person",
        koMap: "overtimeManagerTask",
        required: true,
      },
      Department: { type: "Text", koMap: "overtimeDepartment", required: true },
      RequisitionOrder: {
        type: "Text",
        koMap: "overtimeRequisitionOrder",
        required: true,
      },
      LaborCategory: {
        type: "Text",
        koMap: "overtimeLaborCategory",
        required: true,
      },
      ContractorType: {
        type: "Text",
        koMap: "overtimeContractorType",
        required: true,
      },
      Dates: {
        type: "Text",
        koMap: "overtimeDates",
        required: true,
      },
      Hours: {
        type: "Number",
        koMap: "overtimeHours",
        required: true,
      },
    },
  });

  /***************************************************************
   *    Declare Observables
   ***************************************************************/
  var DeptApproversTitle = "GOV_MGMT";
  var DeptApproversId = sal.globalConfig.siteGroups.find(function (group) {
    return group.title == DeptApproversTitle;
  })?.ID;
  vm.overtimeFullName = new PeopleField();
  vm.overtimeManagerDept = new PeopleField({
    SharePointGroupID: DeptApproversId,
  });
  vm.overtimeManagerTask = new PeopleField();
  vm.overtimeDepartment = ko.observable();
  vm.overtimeRequisitionOrder = ko.observable();
  vm.overtimeLaborCategory = ko.observable();
  vm.overtimeContractorType = ko.observable();
  vm.overtimeContractorTypeOpts = ko.observableArray(["SCA", "Non-SCA"]);
  vm.overtimeDates = ko.observable();
  vm.overtimeHours = ko.observable();
</script>

<script type="text/html" id="tmpl_ch_overtime">
  <div class="ui form">
    <div class="two fields">
      <div class="field">
        <label>Contractor<span class="required">*</span>: </label>
        <input
          class="editable-field"
          type="text"
          disabled="true"
          data-bind="value: overtimeFullName.title, visible: currentView() == 'view'"
        />
        <div
          id="peopleovertimeFullName"
          class="editable-field"
          data-bind="people: overtimeFullName, 
            visible: currentView() != 'view'"
        ></div>
      </div>
      <div class="field">
        <label>Dept Manager<span class="required">*</span>: </label>
        <input
          class="editable-field"
          type="text"
          disabled="true"
          data-bind="value: overtimeManagerDept.title, 
          visible: currentView() == 'view'"
        />
        <div
          id="peopleovertimeManagerDept"
          class="editable-field"
          data-bind="people: overtimeManagerDept, 
            visible: currentView() != 'view'"
        ></div>
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label>Task Manager<span class="required">*</span>: </label>
        <input
          class="editable-field"
          type="text"
          disabled="true"
          data-bind="value: overtimeManagerTask.title, visible: currentView() == 'view'"
        />
        <div
          id="peopleovertimeManagerTask"
          class="editable-field"
          data-bind="people: overtimeManagerTask, 
            visible: currentView() != 'view'"
        ></div>
      </div>
      <div class="field">
        <label>Department<span class="required">*</span>:</label>
        <input
          class="editable-field"
          type="text"
          data-bind="disable: currentView() == 'view',
              value: overtimeDepartment"
        />
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label>Labor Category (LCAT)<span class="required">*</span>:</label>
        <input
          class="editable-field"
          type="text"
          data-bind="disable:
              currentView() == 'view', value: overtimeLaborCategory"
        />
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label
          >Requisition Number/Task Order<span class="required">*</span>:</label
        >
        <input
          class="editable-field"
          type="text"
          data-bind="disable:
              currentView() == 'view', value: overtimeRequisitionOrder"
        />
      </div>
      <div class="field">
        <label>Contractor Type<span class="required">*</span>:</label>
        <select
          class="editable-field"
          type="text"
          data-bind="disable: currentView() == 'view',
              value: overtimeContractorType, options: overtimeContractorTypeOpts,
              optionsCaption: 'Select...'"
        ></select>
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label>Overtime Dates<span class="required">*</span>:</label>
        <input
          class="editable-field"
          type="text"
          data-bind="disable:
              currentView() == 'view', value: overtimeDates"
        />
      </div>
      <div class="field">
        <label>Overtime Hours<span class="required">*</span>:</label>
        <input
          class="editable-field"
          type="Number"
          data-bind="disable: currentView() == 'view',
              value: overtimeHours"
        />
      </div>
    </div>
  </div>
</script>
