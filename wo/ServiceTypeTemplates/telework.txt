<script>
  /************************************************************
   *    List Def:
   ************************************************************/
  vm.listDefs.push({
    uid: "telework",
    name: "st_telework",
    title: "st_telework",
    viewFields: {
      ID: { type: "Text", koMap: "empty", required: false },
      Title: { type: "Text", koMap: "requestID", required: false },
      FullName: {
        type: "Person",
        koMap: "teleworkFullName",
        required: true,
        displayName: "Contractor",
      },
      ManagerDept: {
        type: "Person",
        koMap: "teleworkManagerDept",
        required: false,
        displayName: "Department Manager",
      },
      ManagerTechnical: {
        type: "Person",
        koMap: "teleworkManagerTechnical",
        required: false,
        displayName: "Government Technical Monitor",
      },
      NoGTM: {
        type: "Bool",
        koMap: "teleworkNoGTM",
        required: false,
        displayName: "Skip GTM Approval:",
      },
      COR: {
        type: "Person",
        koMap: "teleworkCOR",
        required: true,
        displayName: "COR",
      },
      Office: {
        type: "Text",
        koMap: "teleworkOffice",
        required: true,
        displayName: "Department",
      },
      RequisitionOrder: {
        type: "Text",
        koMap: "teleworkRequisitionOrder",
        required: true,
        displayName: "Requisition Order",
      },
      LaborCategory: {
        type: "Text",
        koMap: "teleworkLaborCategory",
        required: true,
        displayName: "Labor Category",
      },
      ContractorType: {
        type: "Text",
        koMap: "teleworkContractorType",
        required: true,
        displayName: "Contractor Type",
      },
      TeleworkType: {
        type: "Text",
        koMap: "teleworkType",
        required: true,
        displayName: "Telework Type",
      },
      MaxEligibility: {
        type: "Text",
        koMap: "teleworkEligibility",
        required: true,
        displayName: "Max Eligibility",
      },
      DaysWeek1: {
        type: "Text",
        koMap: "teleworkDays1",
        required: false,
        displayName: "Telework Days Week 1",
      },
      DaysWeek2: {
        type: "Text",
        koMap: "teleworkDays2",
        required: false,
        displayName: "Telework Days Week 2",
      },
    },
  });

  /***************************************************************
   *    Declare Observables
   ***************************************************************/
  var DeptApproversTitle = "GOV_MGMT";
  var DeptApproversId = sal.globalConfig.siteGroups.find(function (group) {
    return group.title == DeptApproversTitle;
  })?.ID;
  vm.teleworkFullName = new PeopleField();

  var peopleSchemaOpts = {
    PrincipalAccountType: "User,SPGroup",
  };
  vm.teleworkManagerDept = new PeopleField(peopleSchemaOpts);
  vm.teleworkManagerTechnical = new PeopleField();
  vm.teleworkNoGTM = ko.observable(false);
  vm.teleworkCOR = new PeopleField();
  vm.teleworkOffice = ko.observable();

  vm.teleworkOfficeSelection = ko.observable();

  vm.teleworkOfficeOpts = ko.pureComputed(function () {
    return vm.configRequestingOffices().map(function (dept) {
      return dept.Title;
    });
  });

  vm.teleworkRequisitionOrder = ko.observable();
  vm.teleworkLaborCategory = ko.observable();
  vm.teleworkContractorType = ko.observable();
  vm.teleworkContractorTypeOpts = ko.observableArray(["SCA", "Non-SCA"]);

  vm.teleworkType = ko.observable();
  vm.teleworkTypeOpts = ko.observableArray(["Core", "Situational"]);
  vm.teleworkEligibility = ko.observable();
  vm.teleworkEligibilityOpts = ko.observableArray([
    "80%",
    "60%",
    "40%",
    "20%",
    "None",
  ]);

  vm.teleworkDaysOpts = ko.observableArray([
    "Sun",
    "Mon",
    "Tues",
    "Wed",
    "Thurs",
    "Fri",
    "Sat",
  ]);

  function DayOfWeek(day) {
    this.day = day;
    this.isSet = ko.observable(false);
  }

  vm.teleworkDays1Map = ko.observableArray(
    vm.teleworkDaysOpts().map((element) => {
      return new DayOfWeek(element);
    })
  );

  vm.teleworkDays1 = new weekMap(vm.teleworkDays1Map);

  vm.teleworkDays2Map = ko.observableArray(
    vm.teleworkDaysOpts().map((element) => {
      return new DayOfWeek(element);
    })
  );

  vm.teleworkDays2 = new weekMap(vm.teleworkDays2Map);

  function weekMap(map) {
    return ko.pureComputed({
      write: function (value) {
        console.log(value);
        if (!value) {
          // passed a null value, clear out array
          map().forEach((elem) => elem.isSet(false));
          return;
        }
        value.forEach((element) => {
          map()
            .find((mapElem) => mapElem.day == element)
            .isSet(true);
        });
      },
      read: function () {
        return map()
          .map((elem) => {
            if (elem.isSet()) return elem.day;
          })
          .filter((elem) => elem != null);
      },
    });
  }

  var telework = vm.configServiceTypes().find(function (stype) {
    return stype.UID == "telework";
  });

  telework.validate = function () {
    var isSaveable = true;
    var msg = "Request not saved:\n";
    if (!vm.teleworkDays1().length && !vm.teleworkDays2().length) {
      msg += "No telework days selected.\n";
      isSaveable = false;
    }

    if (!vm.teleworkNoGTM() && !vm.teleworkManagerTechnical.ID()) {
      msg += "Technical Monitor must be designated.";
      isSaveable = false;
    }

    if (!isSaveable) {
      alert(msg);
      vm.requestIsSaveable(false);
    }
  };

  telework.pipelineLogic = {
    skipStage: function (stageNum) {
      if (stageNum == 2) {
        return vm.teleworkNoGTM();
      }
      return false;
    },
  };
</script>

<script type="text/html" id="tmpl_telework">
  <div class="ui form">
    <div class="two fields">
      <div class="field">
        <label>Contractor<span class="required">*</span>: </label>
        <input
          class="editable-field"
          type="text"
          disabled="true"
          data-bind="value: teleworkFullName.title, visible: currentView() == 'view'"
        />
        <div
          id="peopleteleworkFullName"
          class="editable-field"
          data-bind="people: teleworkFullName,
            visible: currentView() != 'view'"
        ></div>
      </div>
      <div class="field">
        <label>Dept Manager: </label>
        <input
          class="editable-field"
          type="text"
          disabled="true"
          data-bind="value: teleworkManagerDept.title(),
        visible: currentView() == 'view'"
        />
        <div
          id="peopleteleworkManagerDept"
          class="editable-field"
          data-bind="people: teleworkManagerDept,
            visible: currentView() != 'view'"
        ></div>
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label
          >Government Technical Monitor<span class="required">*</span>:
        </label>
        <input
          class="editable-field"
          type="text"
          disabled="true"
          data-bind="value: teleworkManagerTechnical.title(),
          visible: currentView() == 'view' && !teleworkNoGTM()"
        />
        <div
          id="peopleteleworkManagerTechnical"
          class="editable-field"
          data-bind="people: teleworkManagerTechnical,
            visible: currentView() != 'view' && !teleworkNoGTM(),
            "
        ></div>
        <div>
          <label
            >Check here if no GTM for this contract:
            <input
              type="checkbox"
              data-bind="checked: teleworkNoGTM, 
                disable: currentView() == 'view'"
          /></label>
        </div>
      </div>
      <div class="field">
        <label>COR<span class="required">*</span>: </label>
        <input
          class="editable-field"
          type="text"
          disabled="true"
          data-bind="value: teleworkCOR.title(),
        visible: currentView() == 'view'"
        />
        <div
          id="peopleteleworkCOR"
          class="editable-field"
          data-bind="people: teleworkCOR,
          visible: currentView() != 'view'"
        ></div>
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label>Office<span class="required">*</span>:</label>
        <select
          class="editable-field"
          type="text"
          data-bind="
            disable: currentView() == 'view',
            value: teleworkOffice, options: teleworkOfficeOpts,
            optionsCaption: 'Select...'"
        ></select>
      </div>
      <div class="field">
        <label>Labor Category (LCAT)<span class="required">*</span>:</label>
        <input
          class="editable-field"
          type="text"
          data-bind="disable:
              currentView() == 'view', value: teleworkLaborCategory"
        />
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label
          >Requisition Number/Task Order<span class="required">*</span>:</label
        >
        <input
          class="editable-field"
          type="text"
          data-bind="disable:
              currentView() == 'view', value: teleworkRequisitionOrder"
        />
      </div>
      <div class="field">
        <label>Contractor Type<span class="required">*</span>:</label>
        <select
          class="editable-field"
          type="text"
          data-bind="disable: currentView() == 'view',
              value: teleworkContractorType, options: teleworkContractorTypeOpts,
              optionsCaption: 'Select...'"
        ></select>
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <label
          >Telework Type<span class="required">*</span>:
          <select
            class="editable-field"
            type="text"
            data-bind="disable: currentView() == 'view',
          value: teleworkType, options: teleworkTypeOpts,
          optionsCaption: 'Select...'"
          ></select>
        </label>
      </div>
      <div class="field">
        <label
          >Max Eligibility<span class="required">*</span>:
          <select
            class="editable-field"
            type="text"
            data-bind="disable: currentView() == 'view',
          value: teleworkEligibility, options: teleworkEligibilityOpts,
          optionsCaption: 'Select...'"
          ></select>
        </label>
      </div>
    </div>
    <div class="two fields">
      <div class="field">
        <!-- <label for="days-of-week">Days of Week:</label>
        <div>
          <select
            multiple
            name="days-of-week"
            class="ui fluid dropdown selection multiple"
            data-bind="disable: currentView() == 'view',
            selectedOptions: teleworkDays, options: teleworkDaysOpts,
            optionsCaption: 'Select...'"
          ></select>
        </div> -->
        <div class="field">
          <label>Week 1</label>
          <div class="week-days">
            <!-- ko foreach: teleworkDays1Map -->
            <div class="option">
              <label
                data-bind="text: $data.day, attr: {'for':  'telework-' + $data.day + '1'}"
              ></label
              ><br />
              <input
                type="checkbox"
                data-bind="checked: $data.isSet, 
                  disable: $root.currentView() == 'view',
                  attr: {'id':  'telework-' + $data.day + '1'}"
              />
            </div>
            <!-- /ko -->
          </div>
        </div>
        <div class="ui hidden divider"></div>
        <div class="field">
          <label>Week 2</label>
          <div class="week-days">
            <!-- ko foreach: teleworkDays2Map -->
            <div class="option">
              <label
                data-bind="text: $data.day, attr: {'for':  'telework-' + $data.day + '1'}"
              ></label
              ><br />
              <input
                type="checkbox"
                data-bind="checked: $data.isSet, 
                  disable: $root.currentView() == 'view',
                  attr: {'id':  'telework-' + $data.day + '1'}"
              />
            </div>
            <!-- /ko -->
          </div>
        </div>
      </div>
    </div>
  </div>
</script>
