<script>
  /************************************************************
   *    List Def: Conference
   ************************************************************/
  vm.listDefs.push({
    uid: "ch_conference",
    name: "st_ch_conference",
    title: "st_ch_conference",
    viewFields: {
      ID: { type: "Text", koMap: "empty" },
      Title: { type: "Text", koMap: "requestID" },
      Room: { type: "Text", koMap: "conferenceRoom", required: true },
      AVRequired: { type: "Bool", koMap: "conferenceAV", required: false },
      AVNeeds: { type: "Text", koMap: "conferenceAVNeeds", required: false },
    },
  });

  /***************************************************************
   *    Declare Observables
   ***************************************************************/

  vm.conferenceAV = ko.observable();
  vm.conferenceDuration = ko.observable();
  vm.conferenceAVNeeds = ko.observable();

  vm.conferenceRoom = ko.observable();
  vm.conferenceRoomOpts = ko.observableArray([
    "Bldg. F Auditorium (Side A & B)",
    "Bldg. F Auditorium (Side A Only)",
    "Bldg. F Auditorium (Side B Only)",
    "Bldg. F Dining Rooms",
    "Bldg. C VTC Room (C128)",
    "Bldg. C Auditorium (C161)",
  ]);

  var opts = {
    minDate: new Date(),
    minTimeGap: 15,
  };
  //vm.conferenceDate = new DateField(opts);

  vm.conferencePresentationDates = new DateRangeTable("presentations");

  var ch_conference = vm.configServiceTypes().find(function (stype) {
    return stype.UID == "ch_conference";
  });

  ch_conference.validate = function () {
    // Service type specific validation
    var hasDates = vm.conferencePresentationDates.dateRanges().length;
    if (!hasDates) {
      alert(
        "This request has not been saved. " +
          "Please enter date ranges for your conference"
      );
      vm.requestIsSaveable(false);
    }
  };
  /*
  vm.conferenceDate = ko.observable();
  vm.conferenceDateStr = ko.pureComputed({
    read: function () {
      return new Date(vm.conferenceDate()).format("yyyy-MM-dd");
    },
    write: function (val) {
      vm.conferenceDate(new Date(val));
    },
  });
  */

  //$("#conferenceDateElement").datepicker();
</script>

<script type="text/html" id="tmpl_ch_conference">
  <h3>Conference Dates</h3>
  <div
    data-bind="template: 
    {name: 'template_dateranges', 
    data: conferencePresentationDates }"
  ></div>
  <div class="ui divider"></div>
  <div class="ui form">
    <div class="two fields">
      <div class="eight wide field">
        <label>Conference Room<span class="required">*</span>:</label>
        <select
          class="editable-field"
          type="text"
          data-bind="disable: currentView() == 'view',
              value: conferenceRoom,
              options: conferenceRoomOpts, optionsCaption: 'Select...',"
        ></select>
      </div>
      <div class="eight wide field">
        <label>A/V Needs<span class="required">*</span>:</label>
        <textarea
          class="editable-field"
          type="text"
          data-bind="disable: currentView() == 'view',
                value: conferenceAVNeeds"
        ></textarea>
      </div>
    </div>
  </div>
</script>
